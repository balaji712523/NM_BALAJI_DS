# -*- coding: utf-8 -*-
"""PROJECT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yiV7X7wUkAmAXbxXHVRUZexZaYXdJVPE
"""

import pandas as pd
 import numpy as np
 import matplotlib.pyplot as plt
 import seaborn as sns

movies=pd.read_csv("movies.csv")

movies=pd.read_csv("movies.csv")

"""# Task
Tell me about this dataset.

Here is all the data you need:
"movies.csv"

## Data loading

### Subtask:
Load the movie dataset from the provided CSV file.

**Reasoning**:
Load the movie dataset from the provided CSV file into a pandas DataFrame and display its first few rows.
"""

import pandas as pd

try:
    df_movies = pd.read_csv('movies.csv')
    display(df_movies.head())
except FileNotFoundError:
    print("Error: 'movies.csv' not found. Please ensure the file exists in the current directory.")
    df_movies = None # Assign None to indicate failure
except pd.errors.EmptyDataError:
    print("Error: 'movies.csv' is empty.")
    df_movies = None
except pd.errors.ParserError:
    print("Error: Unable to parse 'movies.csv'. Please check the file format.")
    df_movies = None
except Exception as e:
    print(f"An unexpected error occurred: {e}")
    df_movies = None

"""## Data exploration

### Subtask:
Explore the movie dataset to understand its characteristics.

**Reasoning**:
I need to explore the movie dataset by examining its shape, data types, missing values, descriptive statistics for numerical columns, unique values and frequencies for categorical columns, and potential outliers.
"""

# Data Shape and Types
print("Data Shape:", df_movies.shape)
print("\nData Types:\n", df_movies.dtypes)

# Missing Values
print("\nMissing Values:\n", df_movies.isnull().sum())

# Descriptive Statistics (for numerical columns)
numerical_cols = df_movies.select_dtypes(include=['number']).columns
if len(numerical_cols) > 0:
    print("\nDescriptive Statistics:\n", df_movies[numerical_cols].describe())
else:
    print("\nNo numerical columns found.")

# Categorical Analysis
categorical_cols = df_movies.select_dtypes(include=['object']).columns
for col in categorical_cols:
    print(f"\nAnalysis for column '{col}':")
    print("Number of unique values:", df_movies[col].nunique())
    print("Most frequent values:\n", df_movies[col].value_counts().head(10)) # Display top 10
    if col == 'title':
        df_movies['title_length'] = df_movies['title'].str.len()
        print("\nTitle Length Statistics:\n", df_movies['title_length'].describe())

# Potential Outliers (preliminary check)
if len(numerical_cols) > 0:
    print("\nPotential Outliers (preliminary):")
    for col in numerical_cols:
        print(f"Column '{col}': Consider using box plots or histograms for visualization.")
else:
    print("\nNo numerical columns found for outlier analysis.")

# Data Summary
print("\nData Summary:")
print("The dataset contains information about movies, including their ID, title, and genres.")
print("The analysis above provides insights into the data's structure, missing values, and value distributions.")
print("Noteworthy observations and potential issues will be documented in the final summary.")

"""## Data analysis

### Subtask:
Perform a more in-depth analysis of the movie dataset, focusing on genre distribution and title characteristics.

**Reasoning**:
Analyze the distribution of movie genres, calculate statistics for title lengths, and optionally explore the relationship between release year and genre.
"""

# Genre Analysis
genre_counts = df_movies['genres'].str.split('|').explode().value_counts()
print("Genre Distribution:\n", genre_counts)

# Title Analysis
print("\nTitle Length Statistics:")
print("Median:", df_movies['title_length'].median())
print("25th Percentile:", df_movies['title_length'].quantile(0.25))
print("75th Percentile:", df_movies['title_length'].quantile(0.75))
print("Range:", df_movies['title_length'].max() - df_movies['title_length'].min())

# Combined Analysis (Optional):  Extract year from title (basic example, could be improved)
import re
df_movies['release_year'] = df_movies['title'].str.extract(r'\((\d{4})\)')
print("\nFirst few rows with release year:")
print(df_movies.head())
genre_year_counts = df_movies.groupby(['release_year', 'genres']).size().unstack(fill_value=0)
print("\nGenre distribution over time")
print(genre_year_counts.head())

"""## Data visualization

### Subtask:
Visualize the key findings from the data exploration and analysis steps.

"""

genre_columns = [col for col in data.columns if 'genres_' in col]
 genre_counts = data[genre_columns].sum().sort_values(ascending=False)
 plt.figure(figsize=(12,6))
 sns.barplot(x=genre_counts.values, y=genre_counts.index, palette='rocket')
 plt.title('Popularity of Movie Genres')
 plt.xlabel('Number of Movies')
 plt.ylabel('Genre')
 plt.show()

# Assuming 'df_movies' is your DataFrame with movie data
# ... (other imports and code before this section) ...
df_movies['genres'] = df_movies['genres'].str.split('|')  # This creates list in 'genres' column
# One-hot encode 'genres' column
all_genres = set(df_movies['genres'].sum())
for genre in all_genres:
    df_movies[f'genres_{genre}'] = 0  # Create new column for each genre, initialize to 0

for index, row in df_movies.iterrows():
    for genre in row['genres']:
        df_movies.loc[index, f'genres_{genre}'] = 1  # Set to 1 if genre exists

# Now the 'df_movies' DataFrame has new columns like 'genres_Action', 'genres_Comedy', etc.

# Genre Analysis
genre_columns = [col for col in df_movies.columns if 'genres_' in col]
genre_counts = df_movies[genre_columns].sum().sort_values(ascending=False)
plt.figure(figsize=(12, 6))
sns.barplot(x=genre_counts.values, y=genre_counts.index, palette='rocket')
plt.title('Popularity of Movie Genres')
plt.xlabel('Number of Movies')
plt.ylabel('Genre')
plt.show()

genre_columns = [col for col in df_movies.columns if col.startswith('genres_')]
genre_counts = df_movies[genre_columns].sum().sort_values(ascending=False)

plt.figure(figsize=(12, 6))
sns.barplot(x=genre_counts.values, y=genre_counts.index, palette='rocket')
plt.title('Popularity of Movie Genres')
plt.xlabel('Number of Movies')
plt.ylabel('Genre')
plt.show()

"""**Reasoning**:
Visualize the key findings from the data exploration and analysis steps using matplotlib.


"""

import matplotlib.pyplot as plt

# 1. Genre Distribution Bar Chart
plt.figure(figsize=(12, 6))
genre_counts.plot(kind='bar', color='skyblue')
plt.title('Distribution of Movie Genres')
plt.xlabel('Genre')
plt.ylabel('Number of Movies')
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.savefig('genre_distribution.png')
plt.show()

# 2. Title Length Distribution Histogram
plt.figure(figsize=(8, 6))
plt.hist(df_movies['title_length'], bins=20, color='lightcoral')
plt.title('Distribution of Movie Title Lengths')
plt.xlabel('Title Length')
plt.ylabel('Frequency')
plt.savefig('title_length_distribution.png')
plt.show()

# 3. Genre Distribution Over Time (Line Chart)
plt.figure(figsize=(15, 8))
for genre in genre_year_counts.columns:
    plt.plot(genre_year_counts.index, genre_year_counts[genre], label=genre)
plt.title('Change in Genre Distribution Over Time')
plt.xlabel('Year')
plt.ylabel('Number of Movies')
plt.legend(loc='upper left', bbox_to_anchor=(1, 1))
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.savefig('genre_over_time.png')
plt.show()

"""## Summary:

### Q&A

There were no explicit questions in the provided data analysis task. However, the analysis implicitly sought to answer questions like:

* What is the structure and content of the movie dataset?
* What is the distribution of movie genres?
* How do movie title lengths vary?
* Is there a discernible trend in genre popularity over time?


### Data Analysis Key Findings

* **No Missing Data:** The dataset contains no missing values across all columns ('movieId', 'title', 'genres').
* **Genre Distribution:** "Drama" is the most prevalent genre, followed by "Comedy" and "(no genres listed)".  A total of 1,639 unique genre combinations were observed.
* **Title Length:** The median movie title length is approximately 25 characters. The range of title lengths is substantial, suggesting variability in title conventions.  The 25th percentile is around 18 and the 75th is around 31.
* **Preliminary Genre Trend Analysis:** The analysis shows the number of movies of each genre in each year. However, a full interpretation requires further investigation of the generated table.

### Insights or Next Steps

* **Deep Dive into Genre Trends:** Further investigate the genre distribution over time to identify significant shifts or patterns.  Explore potential correlations between genre popularity and other factors (e.g., historical events, societal trends).
* **Outlier Investigation:** Analyze the "movieId" column for outliers using visualizations like box plots or histograms, to understand if there are any unusual or erroneous entries.

"""